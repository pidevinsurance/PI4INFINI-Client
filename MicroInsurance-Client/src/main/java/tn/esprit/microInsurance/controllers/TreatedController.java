package tn.esprit.microInsurance.controllers;

import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.fxml.Initializable;
import javafx.scene.Node;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.Button;

import javafx.scene.control.TextField;
import javafx.scene.control.TableColumn.CellDataFeatures;
import javafx.scene.control.cell.PropertyValueFactory;

import java.io.IOException;
import java.net.URL;
import java.util.List;
import java.util.ResourceBundle;

import javax.naming.Context;
import javax.naming.InitialContext;
import javax.naming.NamingException;

import javafx.beans.property.SimpleObjectProperty;
import javafx.beans.value.ObservableValue;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.event.ActionEvent;

import javafx.scene.control.Label;

import javafx.scene.image.ImageView;
import javafx.scene.layout.AnchorPane;
import javafx.stage.Stage;
import javafx.util.Callback;
import tn.esprit.microinsurance.Entities.ProductType;
import tn.esprit.microinsurance.Entities.Quotation;
import tn.esprit.microinsurance.Entities.TypesMicroInsurance;
import tn.esprit.microinsurance.Services.Interf.QuoteRemote;
import javafx.scene.control.TableView;

import javafx.scene.control.TableColumn;

public class TreatedController implements Initializable {
	@FXML
	private Button btnOverview;
	@FXML
	private Button btnOrders;
	@FXML
	private Button btnCustomers;
	@FXML
	private Button btnMenus;
	@FXML
	private Button btnPackages;
	@FXML
	private Button btnSettings;
	@FXML
	private Button btnExit;
	@FXML
	private Button btnExit1;
	@FXML
	private Label TodaysRequest;
	@FXML
	private Label TotalRequests;
	@FXML
	private Label TreatedRequests;
	@FXML
	private Label lblUntreatedRequests;
	@FXML
	private TextField txtSearch;
	@FXML
	private ImageView imgSearch;
	@FXML
	private Button btnTreated;
	@FXML
	private Button btnUntreated;
	@FXML
	private Button all;
	@FXML
	private TableView<Quotation> TableViewQuote;
	@FXML
	private TableColumn<Quotation, String> name;
	@FXML
	private TableColumn<Quotation, String> surname;
	@FXML
	private TableColumn<Quotation, TypesMicroInsurance>insurance_type;
	@FXML
	private TableColumn<Quotation,ProductType> insurance_product;
	@FXML
	private TableColumn<Quotation, String> phone_number;
	@FXML
	private Button Return;
	@FXML
	private AnchorPane objet;

	// Event Listener on Button[#btnExit1].onAction
	@FXML
	public void ExitTheApp(ActionEvent event) {
		Stage stage;
        stage=(Stage) btnExit1.getScene().getWindow();
    	stage.close();

	}
	// Event Listener on TextField[#txtSearch].onAction
	@FXML
	public void SearchQuotation(ActionEvent event) {
		// TODO Autogenerated
	}
	// Event Listener on Button[#btnTreated].onAction
	@FXML
	public void GetTreatedRequests(ActionEvent event) {
		// TODO Autogenerated
	}
	// Event Listener on Button[#btnUntreated].onAction
	@FXML
	public void GetUntreatedRequests(ActionEvent event) {
		// TODO Autogenerated
	}
	// Event Listener on Button[#all].onAction
	@FXML
	public void GetAllRequests(ActionEvent event) {
		// TODO Autogenerated
	}
	@Override
	public void initialize(URL location, ResourceBundle resources) {
		Context context;
		try {
			String jndiName="MicroInsurance-ear/MicroInsurance-ejb/QuoatationImpl!tn.esprit.microinsurance.Services.Interf.QuoteRemote";
			context = new InitialContext();
			QuoteRemote proxy=(QuoteRemote) context.lookup(jndiName);
			List<Quotation> quotes ;
			quotes=proxy.findTreatedQuotations();
	    			name.setCellValueFactory(new PropertyValueFactory<>("Nom"));
	    			surname.setCellValueFactory(new PropertyValueFactory<>("Prenom"));
	    			insurance_type.setCellValueFactory(new Callback<TableColumn.CellDataFeatures<Quotation,TypesMicroInsurance>, ObservableValue<TypesMicroInsurance>>() {
						
						@Override
						public ObservableValue<TypesMicroInsurance> call(CellDataFeatures<Quotation, TypesMicroInsurance> param) {
						return new SimpleObjectProperty<>(param.getValue().getProduct().getType());
						}

						
					});
	            
						
				
					insurance_product.setCellValueFactory(new Callback<TableColumn.CellDataFeatures<Quotation,ProductType>, ObservableValue<ProductType>>() {

						@Override
						public ObservableValue<ProductType> call(CellDataFeatures<Quotation, ProductType> param) {
							// TODO Auto-generated method stub
							return new SimpleObjectProperty<>(param.getValue().getProduct().getLabel());
						}
					});
	    			phone_number.setCellValueFactory(new PropertyValueFactory<>("Phone_Number"));
	    			
			
			ObservableList<Quotation> items = FXCollections.observableArrayList(quotes);
			
	        TableViewQuote.setItems(items); 
	    	   
			
		} catch (NamingException e) {
			e.printStackTrace();
		}

	}
	 @FXML
	    void Return(ActionEvent event) throws IOException {
		Parent home_page_parent = FXMLLoader
				.load(getClass().getResource("/tn/esprit/microInsurance/views/QuotesView.fxml"));
		Scene home_page_scene = new Scene(home_page_parent);
		Stage app_stage = (Stage) ((Node) event.getSource()).getScene().getWindow();
		app_stage.hide(); // optional
		app_stage.setScene(home_page_scene);
		app_stage.show();
	    	

	    }
}
